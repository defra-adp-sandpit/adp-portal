app:
  title: ADP Portal
  baseUrl: http://localhost:3000
  support:
    url: https://github.com/defra-adp-sandpit/adp-portal/issues
    items:
      - title: Issues
        icon: github
        links:
          - url: https://github.com/defra-adp-sandpit/adp-portal/issues
            title: GitHub Issues

organization:
  name: DEFRA

permission:
  enabled: true

backend:
  auth:
    keys:
      - secret: ${BACKENDD_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'
  #database:
  #  client: better-sqlite3
  #  connection:
  #    directory: 'tmp'

proxy:

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

integrations:
  azure:
    - host: dev.azure.com
      credentials:
        - clientId: ${AUTH_MICROSOFT_CLIENT_ID}
          clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
          tenantId: ${AUTH_MICROSOFT_TENANT_ID}

auth:
  environment: sandpit
  providers:
    microsoft:
      sandpit:
        clientId: ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
    
    github:
      sandpit:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template, Domain, Group]
  
  # Providers configured to scan repos in the specified organizations for components to add to the catalog.
  # Assumes a catalog-info.yml file is present in the root of the repo.
  providers:
    github:
      adpSandpit:
        organization: 'defra-adp-sandpit'
        catalogPath: '/catalog-info.yaml'
        filters:
          branch: 'main'
        schedule:
          frequency: { minutes: 30 }
          timeout: { minutes: 5 }
      #defra:
      #  organization: 'defra'
      #  catalogPath: '**/catalog-info.yml'
      #  filters:
      #    branch: 'main'
      #  schedule:
      #    frequency: { minutes: 30 }
      #    timeout: { minutes: 5 }

    microsoftGraphOrg:
      default:
        tenantId: ${AUTH_MICROSOFT_TENANT_ID}
        userGroupMember:
          filter: "displayName eq 'AG-Azure-CDO-ADP-PlatformEngineers'"
        group:
          filter: "displayName eq 'AG-Azure-CDO-ADP-PlatformEngineers'"
        schedule:
          frequency: { minutes: 60 }
          timeout: { minutes: 10 }

  # Locations configured to import static data into the catalog
  locations:
    - type: url
      target: https://github.com/defra-adp-sandpit/adp-software-templates/blob/main/catalog-model/defra-org.yaml
      rules:
        - allow: [User, Group]

    - type: url
      target: https://github.com/defra-adp-sandpit/adp-software-templates/blob/main/catalog-model/all.yaml
