parameters:
  - name: recreate
    displayName: "Recreate the container app?"
    type: boolean
    default: false    
pr:
  branches:
    include:
      - main
      - master
  paths:
    exclude:
      - test-output/*
      - bin/*
      - obj/*
  drafts: false

trigger:
  batch: true
  branches:
    include:
      - "main"
  paths:
    exclude:
      - test-output/*
      - bin/*
      - obj/*

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

jobs:
- job: Build
  pool:
    name: 'DEFRA-ADP-SND1-ubuntu2204'
  variables:
    - name: appName
      value: 'backstage'
    - name: acrName
      value: 'ssvadpinfcr3401'
    - name: serviceConnection
      value: 'AZD-CDO-SSV3'
    - name: resourceGroup
      value: 'SSVADPINFRG3402'
    - name: userAssignedIdentity
      value: '/subscriptions/7dc5bbdf-72d7-42ca-ac23-eb5eea3764b4/resourcegroups/SSVADPINFRG3402/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ssvadpinfmid1401-portal'
    - name: keyvaultName
      value: 'SSVADPINFVT3402'
    - name: managedEnvironmentId
      value: '/subscriptions/7dc5bbdf-72d7-42ca-ac23-eb5eea3764b4/resourceGroups/SSVADPINFRG3402/providers/Microsoft.App/managedEnvironments/SSVADPINFCA3401'
    - name: appBaseUrl
      value: 'https://portal.snd1.adp.defra.gov.uk'
    - name: grafanaEndpoint
      value: https://SSVADPINFMG3401-apa8eed9b2hsc2an.suk.grafana.azure.com 
  steps:
  - checkout: self
    clean: true
    fetchTags: false
    persistCredentials: True
  - pwsh: |
      yarn install --frozen-lockfile
      yarn tsc
      yarn build:backend
    errorActionPreference: silentlyContinue
    workingDirectory: app
    displayName: 'Yarn Build'
  - task: AzureCLI@2
    displayName: 'Docker Build and Push'
    inputs:
      azureSubscription: 'AZD-CDO-SSV3'
      scriptType: pscore
      scriptLocation: inlineScript
      workingDirectory: app
      inlineScript: |                
        docker buildx build -t $(appName) -f ./packages/backend/Dockerfile --platform=linux/amd64 .
        az acr login -n $(acrName)
        docker tag $(appName) $(acrName).azurecr.io/$(appName):$(Build.BuildId)
        docker push $(acrName).azurecr.io/$(appName):$(Build.BuildId)
  - task: replacetokens@5
    displayName: 'Replace tokens in config'
    inputs:
      tokenPattern: doublebraces
      inlineVariables: |
        keyvaultName:  $(keyvaultName)
        userAssignedIdentity: $(userAssignedIdentity)  
        managedEnvironmentId: $(managedEnvironmentId)
        acrName: $(acrName) 
        appName: $(appName)
        appVersion: $(Build.BuildId)
        appBaseUrl: $(appBaseUrl)     
        imageRepoName: $(appName)
        grafanaEndpoint: $(grafanaEndpoint)
      targetFiles: |
        $(Pipeline.Workspace)/s/.azuredevops/backstage.yaml
  - task: AzureCLI@2
    displayName: 'Create ContainerApp'
    inputs:
      azureSubscription: 'AZD-CDO-SSV3'
      scriptType: pscore
      scriptLocation: inlineScript
      workingDirectory: '$(Pipeline.Workspace)/s'
      inlineScript: |  
        az containerapp create -n $(appName) -g $(resourceGroup) --yaml "./.azuredevops/backstage.yaml"        
